<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <SolidColorBrush x:Key="BackgroundColor" Color="#121212" />
    <SolidColorBrush x:Key="MenuBarColor" Color="#181818" />
    <SolidColorBrush x:Key="TopGradientColor" Color="#404040" />
    <SolidColorBrush x:Key="BottomGradientColor" Color="#282828" />
    <SolidColorBrush x:Key="PrimaryTextColor" Color="#FFFFFF" />
    <SolidColorBrush x:Key="SecondaryTextColor" Color="#B3B3B3" />
    <SolidColorBrush x:Key="PrimaryAccentColor" Color="#6b77e8" />
    <SolidColorBrush x:Key="SecondaryAccentColor" Color="#ff5f96" />

    <Style x:Key="TextBlockStyle"  TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="Tahoma" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="Foreground" Value="{StaticResource PrimaryTextColor}" />
    </Style>

    <Style x:Key="MenuOptionButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource PrimaryTextColor}"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="border" 
                        BorderThickness="1"
                        Padding="4,2" 
                        BorderBrush="Transparent" 
                        Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="FontWeight" Value="Bold" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CatalogBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{StaticResource MenuBarColor}" />
        <Setter Property="BorderBrush" Value="{StaticResource PrimaryAccentColor}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Width" Value="250" />
        <Setter Property="Height" Value="300" />
        <Setter Property="Margin" Value="10" />
        <Style.Triggers>
            <Trigger Property="Border.IsMouseOver" Value="True">
                <Setter Property="Border.BorderBrush" Value="{StaticResource SecondaryAccentColor}" />
                <Setter Property="Border.BorderThickness" Value="2" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type GroupBox}">
        <Setter Property="FontFamily" Value="Tahoma" />
        <Setter Property="FontSize" Value="25" />
        <Setter Property="Margin" Value="3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Label Grid.Row="0" HorizontalAlignment="Left" Foreground="{DynamicResource PrimaryTextColor}">
                            <ContentPresenter ContentSource="Header" />
                        </Label>
                        <Border Grid.Row="1" BorderThickness="0,1,0,0"
                                BorderBrush="{DynamicResource SecondaryAccentColor}"
                                Background="{DynamicResource MenuBarColor}">
                            <ContentPresenter />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataGridHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Height" Value="30" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="0,0,0,1" />
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryAccentColor}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="FontFamily" Value="Tahoma" />
    </Style>

    <Style x:Key="DataGridRowStyle" TargetType="{x:Type DataGridRow}">
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource PrimaryAccentColor}" />
                <Setter Property="Foreground" Value="{DynamicResource BackgroundColor}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="False">
                <Setter Property="Background" Value="{DynamicResource BackgroundColor}" />
                <Setter Property="Foreground" Value="{DynamicResource PrimaryAccentColor}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DataGridCellStyle" TargetType="{x:Type DataGridCell}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource PrimaryAccentColor}" />
                <Setter Property="Foreground" Value="{DynamicResource BackgroundColor}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="False">
                <Setter Property="Background" Value="{DynamicResource BackgroundColor}" />
                <Setter Property="Foreground" Value="{DynamicResource PrimaryAccentColor}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DataGridStyle" TargetType="{x:Type DataGrid}">
        <Setter Property="ColumnHeaderStyle" Value="{StaticResource DataGridHeaderStyle}" />
        <Setter Property="CellStyle" Value="{StaticResource DataGridCellStyle}" />
        <Setter Property="RowStyle" Value="{StaticResource DataGridRowStyle}" />
        <Setter Property="Background" Value="{DynamicResource MenuBarColor}" />
        <Setter Property="HeadersVisibility" Value="Column" />
        <Setter Property="BorderThickness" Value="0" />
    </Style>

</ResourceDictionary>